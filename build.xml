<project name="AntDefault">

    <!-- Change the paths to your individual installation directories -->
    <property name="lib.dir" location="${basedir}/lib" />
    <property name="src.java" location ="${basedir}/src"/>
    <property name="src.test" location="${basedir}/test"/>

    <property name="build.dir" location="${basedir}/build"/>
    <property name="build.classes.java" location="${build.dir}/class/java"/>
    <property name="build.classes.test" location="${build.dir}/class/test"/>

    <!--property name="instrumented.dir" location="${build.dir}/instrumented"/-->
    <property name="htm.dir" location="${basedir}/html" />
    <property name="report.dir" location="${basedir}/report" />

    <property name="checkstyle.home.dir" location="${lib.dir}/checkstyle-7.0.jar" />
    <property name="cobertura.home.dir" value="${lib.dir}/cobertura-2.1.1.jar" />
    <property name="findbugs.home.dir" value="${lib.dir}/findbugs-3.0.1.jar" />
    <property name="pmd.home.dir" value="${lib.dir}/pmd-4.3.jar" />

    <property name="report.checkstyle.dir" location="${report.dir}/checkstyle" />
    <property name="report.junit.dir" location="${report.dir}/junit" />
    <property name="report.findbugs.dir" location="${report.dir}/findbugs" />
    <property name="report.cobertura.dir" location="${report.dir}/cobertura" />
    <property name="report.pmd.dir" location="${report.dir}/pmd" />

    <property name="instrumented.dir" location="${basedir}/instrumented" />
    <property name="report.temp.dir" location="${report.dir}/temp" />
    <property name="cobertura.ser.file" location="${report.temp.dir}/cobertura.ser" />

    <path id="interface.lib">
        <fileset dir="${lib.dir}/">
            <include name="interfaces-2.0.2.jar"/>
        </fileset>
    </path>

    <path id="run.classpath">
        <pathelement path="${build.classes.java}" />
        <pathelement path="lib/interfaces-2.0.2.jar"/>
        <pathelement path="${basedir}/lib/junit-4.11.jar" />
        <pathelement path="lib/hamcrest-core-1.2.jar"/>
    </path>
    <path id="cobertura.classpath">
        <fileset dir="${lib.dir}/">
            <include name="cobertura-2.1.1.jar"/>
            <include name="log4j-1.2.17.jar"/>
            <include name="slf4j-api-1.7.0.jar"/>
            <include name="slf4j-log4j12-1.7.25.jar"/>
        </fileset>
    </path>

    <taskdef classpathref="cobertura.classpath" resource="tasks.properties" />

    <!-- -->
    <target name="clean" description="Delete all result to start with a clean build.">
        <delete dir="${report.junit.dir}" />
        <delete dir="${report.findbugs.dir}" />
        <delete dir="${report.cobertura.dir}" />
        <delete dir="${report.checkstyles.dir}" />
        <delete dir="${report.temp.dir}" />
        <delete dir="${build.dir}" />
    </target>

    <target name="prepare.report.dir" description="Prepares the reports folder">
        <copy todir="${report.dir}">
            <fileset dir="${htm.dir}">
                <include name="*.htm" />
            </fileset>
        </copy>
    </target>

    <!-- -->
    <target name="findbugs"
            depends="compileAll"
            description="Run code analysis over code to check for problems.">
        <!-- Run FindBugs. -->
        <mkdir dir="${report.findbugs.dir}" />
        <findbugs home="${findbugs.home.dir}"
                  workHard="true"
                  output="xml:withMessages"
                  outputFile="${report.findbugs.dir}/findbugs.xml">
            <class location="${build.classes.java}"/>
            <class location="${build.classes.test}"/>
            <auxClasspath>
                <fileset file="${basedir}/lib/junit-4.11.jar" />
            </auxClasspath>
        </findbugs>
    </target>

    <!-- -->
    <!--taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/-->
    <target name="report.pmd">
        <mkdir dir="${report.pmd.dir}" />
        <pmd rulesetfiles="rulesets/favorites.xml">
            <formatter type="xml" toFile="${report.pmd.dir}/pmd_report.xml" />
            <fileset dir="${src.java}">
                <include name="**/*.java" />
            </fileset>
            <!-- ??? 3 rows lower-->
            <fileset dir="${test.java}">
                <include name="**/*.java" />
            </fileset>
        </pmd>
        <xslt in="${report.pmd.dir}/pmd_report.xml"
              style="${pmd.home.dir}/etc/xslt/pmd-report-per-class.xslt"
              out="${report.pmd.dir}/pmd_report.html"
        />
    </target>

    <target name="compile.java" description="Compilation of the classes" depends="clean">
        <echo>Compiling classes...</echo>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.java}"/>
        <javac includeantruntime="false"  destdir="${build.classes.java}">
            <src path="${src.java}"/>
            <classpath refid="interface.lib"/>
        </javac>
    </target>

    <target name="compile.test" description="Compilation of the tests" depends="compile.java">
        <echo>Compiling tests....</echo>
        <mkdir dir="${build.classes.test}"/>
        <javac includeantruntime="true"  destdir="${build.classes.test}">
            <src path="${src.test}"/>
            <classpath refid="run.classpath"/>
        </javac>
    </target>

    <!-- -->
    <target name="compileAll" depends="compile.java, compile.test" description="Compile the entire project.">
    </target>

    <!-- -->
    <target name="cobertura.instrument"
            depends="clean, compileAll"
            description="Instrument the project for code coverage.">
        <mkdir dir="${report.temp.dir}" />
        <cobertura-instrument todir="${instrumented.dir}" datafile="${cobertura.ser.file}">
            <ignore regex="org.apache.log4j.*" />
            <fileset dir="${build.dir}/class">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <!-- -->
    <target name="junit"
            depends="clean, compileAll, cobertura.instrument"
            description="Run all junit test cases."
    >
        <mkdir dir="${report.cobertura.dir}" />
        <mkdir dir="${report.temp.dir}" />

        <junit printsummary="yes" fork="yes" haltonfailure="no">

            <!-- Specify the name of the coverage data file to use.
                 The value specified below is the default.    -->
            <sysproperty key="net.sourceforge.cobertura.datafile"
                         file="${cobertura.ser.file}" />

            <!-- Note the classpath order: instrumented classes are before
                 the original (uninstrumented) classes.  This is important. -->

            <!--classpath location="${basedir}/lib/junit-4.5.jar}" /
            ??? lower 1 row
            -->
            <classpath>
                <path refid="run.classpath"/>
                <pathelement location="${build.classes.test}"/>
                <pathelement location="${instrumented.dir}"/>
            </classpath>
            <batchtest>
                <fileset dir="${src.test}" includes="**/*Test.java" />
            </batchtest>

            <!-- The instrumented classes reference classes used by the
                 Cobertura runtime, so Cobertura and its dependencies
                 must be on your classpath. -->
            <classpath refid="cobertura.classpath" />

            <formatter type="plain" />
            <formatter type="xml" />

            <batchtest todir="${report.temp.dir}">
                <fileset dir="${src.test}">
                    <include name="**/*Test.java" />
                </fileset>
            </batchtest>
        </junit>
    </target>

    <!-- -->
    <target name="report.junit" depends="junit"
            description="Create a report for the test result.">
        <delete dir="${report.junit.dir}" />
        <mkdir dir="${report.junit.dir}" />
        <junitreport todir="${report.junit.dir}">
            <fileset dir="${report.temp.dir}">
                <include name="*.xml" />
            </fileset>
            <report format="frames" todir="${report.junit.dir}" />
        </junitreport>
    </target>

    <!-- -->
    <target name="report.findbugs" description="Generate a report on error analysis.">
        <xslt in="${report.findbugs.dir}/findbugs.xml"
              style="${findbugs.home.dir}/src/xsl/fancy.xsl"
              out="${report.findbugs.dir}/findbugs-default.html"
        />
    </target>

    <!-- -->
    <target name="report.cobertura"
            depends="junit"
            description="Generate an HTML report on Cobertura."
    >
        <cobertura-report format="html"
                          datafile="${cobertura.ser.file}"
                          destdir="${report.cobertura.dir}"
        >
            <!--???-->
            <fileset dir="${src.java}">
                <include name="**/*.java" />
            </fileset>
            <fileset dir="${src.test}">
                <include name="**/*.java" />
            </fileset>
        </cobertura-report>
    </target>


    <!-- -->
    <target name="report.checkstyle"
            description="Generate a report of code convention violations.">
        <!--taskdef resource="checkstyletask.properties"
                 classpath="${checkstyle.home.dir}/checkstyle-all-5.0.jar"
        /-->
        <mkdir dir="${report.checkstyle.dir}" />

        <!-- run analysis-->
        <checkstyle config="${checkstyle.home.dir}/sun_checks.xml"
                    failureProperty="checkstyle.failure"
                    failOnViolation="false"
        >
            <formatter type="xml" tofile="${report.checkstyle.dir}/checkstyle_report.xml" />
            <fileset dir="${src.java}" includes="**/*.java" />
            <fileset dir="${src.test}" includes="**/*.java" />
        </checkstyle>

        <style in="${report.checkstyle.dir}/checkstyle_report.xml"
               out="${report.checkstyle.dir}/checkstyle_report.html"
               style="${checkstyle.home.dir}/contrib/checkstyle-noframes.xsl"
        />
    </target>

    <!-- -->
    <target name="clean.temp" description="Delete all temporary files and folders.">
        <delete dir="${instrumented.dir}" />
        <delete dir="${report.temp.dir}" />
    </target>

    <target name="jar" depends="compile.java, compile.test">
        <jar destfile="${build.jar}/ArrayCollection.jar"
             basedir="${build.dir}/class/java"
             compress="false"
             index="true">
            <manifest>
                <attribute name="Class-Path" value="${lib.dir}/*.jar"/>
            </manifest>
        </jar>
    </target>
    <!-- -->
    <target name="run"
            description="Run the build"
            depends="clean,
                prepare.report.dir,
                report.checkstyle,
                report.pmd,
                compileAll,
                cobertura.instrument,
                junit,
                report.junit,
                findbugs,
                report.findbugs,
                report.cobertura,
                clean.temp"
    >
    </target>

</project>